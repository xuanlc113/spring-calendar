[{"C:\\Programming\\Calendar\\client\\src\\index.js":"1","C:\\Programming\\Calendar\\client\\src\\App.js":"2","C:\\Programming\\Calendar\\client\\src\\layout\\Home.js":"3","C:\\Programming\\Calendar\\client\\src\\login\\Login.js":"4","C:\\Programming\\Calendar\\client\\src\\layout\\Navbar.js":"5","C:\\Programming\\Calendar\\client\\src\\layout\\Sidebar.js":"6","C:\\Programming\\Calendar\\client\\src\\layout\\Content.js":"7","C:\\Programming\\Calendar\\client\\src\\layout\\Contact.js":"8","C:\\Programming\\Calendar\\client\\src\\event_info\\Popup.js":"9","C:\\Programming\\Calendar\\client\\src\\schedule\\week\\Week.js":"10","C:\\Programming\\Calendar\\client\\src\\schedule\\day\\Day.js":"11","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\Month.js":"12","C:\\Programming\\Calendar\\client\\src\\schedule\\Header.js":"13","C:\\Programming\\Calendar\\client\\src\\schedule\\Schedule.js":"14","C:\\Programming\\Calendar\\client\\src\\schedule\\Timeline.js":"15","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthTile.js":"16","C:\\Programming\\Calendar\\client\\src\\schedule\\Event.js":"17","C:\\Programming\\Calendar\\client\\src\\schedule\\Grid.js":"18","C:\\Programming\\Calendar\\client\\src\\event_info\\RepeatPopup.js":"19"},{"size":499,"mtime":1608615488848,"results":"20","hashOfConfig":"21"},{"size":649,"mtime":1608448792806,"results":"22","hashOfConfig":"21"},{"size":3328,"mtime":1609038324168,"results":"23","hashOfConfig":"21"},{"size":692,"mtime":1608345517040,"results":"24","hashOfConfig":"21"},{"size":2467,"mtime":1608792753165,"results":"25","hashOfConfig":"21"},{"size":2057,"mtime":1609037929464,"results":"26","hashOfConfig":"21"},{"size":1668,"mtime":1609037927360,"results":"27","hashOfConfig":"21"},{"size":1118,"mtime":1608445103786,"results":"28","hashOfConfig":"21"},{"size":7680,"mtime":1608797222226,"results":"29","hashOfConfig":"21"},{"size":1286,"mtime":1608511704520,"results":"30","hashOfConfig":"21"},{"size":1755,"mtime":1608511685182,"results":"31","hashOfConfig":"21"},{"size":1488,"mtime":1609037928820,"results":"32","hashOfConfig":"21"},{"size":938,"mtime":1608447645996,"results":"33","hashOfConfig":"21"},{"size":2452,"mtime":1608775610932,"results":"34","hashOfConfig":"21"},{"size":1221,"mtime":1608348922289,"results":"35","hashOfConfig":"21"},{"size":407,"mtime":1609037928127,"results":"36","hashOfConfig":"21"},{"size":457,"mtime":1608533330778,"results":"37","hashOfConfig":"21"},{"size":729,"mtime":1608446750048,"results":"38","hashOfConfig":"21"},{"size":2742,"mtime":1608702404269,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ezpajk",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"C:\\Programming\\Calendar\\client\\src\\index.js",[],["83","84"],"C:\\Programming\\Calendar\\client\\src\\App.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Home.js",["85","86","87"],"C:\\Programming\\Calendar\\client\\src\\login\\Login.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Navbar.js",["88"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Badge, Select, Space } from \"antd\";\r\nimport { UserOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport * as dayjs from \"dayjs\";\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  margin: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst DateNav = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background: white;\r\n  border-radius: 1rem;\r\n  & > h2 {\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: default;\r\n  }\r\n\r\n  & > .anticon {\r\n    margin: 0 1rem;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  & > span:hover {\r\n    background-color: lightgrey;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FriendIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n\r\n  &:hover {\r\n    background-color: rgb(156, 174, 185);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default function Navbar(props) {\r\n  const { Option } = Select;\r\n  const { logout } = useAuth0();\r\n\r\n  function displayDate() {\r\n    if (props.period !== \"day\") {\r\n      return props.date.format(\"MMMM\");\r\n    }\r\n    return props.date.format(\"D MMMM\");\r\n  }\r\n\r\n  function incrementDate() {\r\n    props.setDate(props.date.add(1, props.period));\r\n  }\r\n\r\n  function decrementDate() {\r\n    props.setDate(props.date.subtract(1, props.period));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <DateNav>\r\n        <LeftOutlined onClick={decrementDate} />\r\n        <h2>{displayDate()}</h2>\r\n        <RightOutlined onClick={incrementDate} />\r\n      </DateNav>\r\n      <Space size={25} align=\"center\">\r\n        <Select\r\n          defaultValue=\"day\"\r\n          value={props.period}\r\n          onChange={props.setPeriod}\r\n        >\r\n          <Option value=\"day\">Day</Option>\r\n          <Option value=\"week\">Week</Option>\r\n          <Option value=\"month\">Month</Option>\r\n        </Select>\r\n        <FriendIcon>\r\n          <Badge count={5} size=\"small\">\r\n            <UserOutlined\r\n              className=\"icon\"\r\n              style={{\r\n                fontSize: \"1.3rem\",\r\n              }}\r\n            />\r\n          </Badge>\r\n        </FriendIcon>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"medium\"\r\n          shape=\"round\"\r\n          onClick={() => logout({ returnTo: window.location.origin })}\r\n        >\r\n          Log Out\r\n        </Button>\r\n      </Space>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\layout\\Sidebar.js",["89"],"C:\\Programming\\Calendar\\client\\src\\layout\\Content.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Contact.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\Popup.js",["90","91","92","93","94","95","96","97","98"],"import styled from \"styled-components\";\r\nimport { useEffect, useReducer, useRef, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Space,\r\n  Input,\r\n  Select,\r\n  DatePicker,\r\n  TimePicker,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport RepeatPopup from \"./RepeatPopup\";\r\nimport RRule, { RRuleSet, rrulestr } from \"rrule\";\r\n\r\nconst weekdays = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nconst PopupContainer = styled(Modal)`\r\n  top: 50px;\r\n  .ant-modal-content {\r\n    border-radius: 10px !important;\r\n    .ant-modal-header {\r\n      border-radius: 10px !important;\r\n    }\r\n    .ant-modal-footer > button {\r\n      border-radius: 5px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FullSpace = styled(Space)`\r\n  width: 100%;\r\n`;\r\n\r\nconst DateContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker: DateRangePicker } = DatePicker;\r\nconst { RangePicker } = TimePicker;\r\nconst { Option } = Select;\r\n\r\nexport default function Popup(props) {\r\n  const select = useRef(null);\r\n  const [showRepeat, setShowRepeat] = useState(false);\r\n  const { info, dispatchInfo, options, setOptions } = useEvent(props.date);\r\n  const [allDay, setAllDay] = useState(false);\r\n\r\n  function blur() {\r\n    select.current.blur();\r\n  }\r\n\r\n  function setRepeat(value) {\r\n    if (value === \"custom\") {\r\n      setShowRepeat(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupContainer\r\n        visible={true}\r\n        onOk={props.closePopup}\r\n        onCancel={props.closePopup}\r\n        title={props.title}\r\n      >\r\n        <FullSpace direction=\"vertical\" size=\"middle\">\r\n          <Input\r\n            placeholder=\"Add Title\"\r\n            value={info.title}\r\n            onChange={(e) =>\r\n              dispatchInfo({ type: \"title\", value: e.target.value })\r\n            }\r\n          />\r\n          <TextArea\r\n            rows={2}\r\n            placeholder=\"Add Description\"\r\n            value={info.description}\r\n            onChange={(e) =>\r\n              dispatchInfo({ type: \"description\", value: e.target.value })\r\n            }\r\n          />\r\n          <Select\r\n            mode=\"multiple\"\r\n            placeholder=\"Add Participants\"\r\n            style={{ width: \"100%\" }}\r\n            options={getUsers()}\r\n            ref={select}\r\n            allowClear\r\n            value={info.participants}\r\n            onChange={(val) => {\r\n              dispatchInfo({ type: \"participants\", value: val });\r\n              blur();\r\n            }}\r\n          />\r\n          <DateContainer>\r\n            {allDay ? (\r\n              <DateRangePicker\r\n                allowClear={false}\r\n                value={getDates(info.datetime, info.duration)}\r\n                onChange={(val) =>\r\n                  dispatchInfo({ type: \"dateRange\", value: val })\r\n                }\r\n              />\r\n            ) : (\r\n              <>\r\n                <DatePicker\r\n                  allowClear={false}\r\n                  value={info.datetime}\r\n                  onChange={(val) => dispatchInfo({ type: \"date\", value: val })}\r\n                />\r\n                <RangePicker\r\n                  allowClear={false}\r\n                  value={getTime(info.datetime, info.duration)}\r\n                  minuteStep={15}\r\n                  format=\"h:mm a\"\r\n                  onChange={(val) => {\r\n                    dispatchInfo({ type: \"timeRange\", value: val });\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n          </DateContainer>\r\n          <Space direction=\"horizontal\" size=\"middle\">\r\n            <Select defaultValue=\"none\" onChange={(value) => setRepeat(value)}>\r\n              <Option value=\"none\">No Repeat</Option>\r\n              <Option value=\"daily\">Daily</Option>\r\n              {/* <Option value=\"weekly\">\r\n                Weekly on {weekdays[info.datetime.day()]}\r\n              </Option>\r\n              <Option value=\"monthly\">\r\n                Monthly on {Math.ceil(info.datetime.date() / 7)}{\" \"}\r\n                {weekdays[info.datetime.day()]}\r\n              </Option> */}\r\n              <Option value=\"annual\">Annually</Option>\r\n              <Option value=\"custom\">Custom</Option>\r\n            </Select>\r\n            <Checkbox\r\n              checked={info.isAllDay}\r\n              onChange={(e) => {\r\n                setAllDay((prev) => !prev);\r\n                dispatchInfo({ type: \"allDay\", value: e.target.checked });\r\n              }}\r\n            >\r\n              All Day\r\n            </Checkbox>\r\n          </Space>\r\n        </FullSpace>\r\n      </PopupContainer>\r\n      {showRepeat && <RepeatPopup closePopup={() => setShowRepeat(false)} />}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getTime(datetime, duration) {\r\n  const round = Math.ceil(datetime.minute() / 15);\r\n  console.log(datetime.minute(round * 15));\r\n  if (duration === 0) {\r\n    return [datetime.minute(round * 15), datetime.minute(round * 15 + 60)];\r\n  }\r\n  return [datetime.minute(round * 15), datetime.minute(round * 15 + duration)];\r\n}\r\n\r\nfunction getDates(datetime, duration) {\r\n  return [datetime, datetime.add(duration, \"day\")];\r\n}\r\n\r\nexport function usePopup() {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  function openPopup() {\r\n    setIsVisible(true);\r\n  }\r\n\r\n  function closePopup() {\r\n    setIsVisible(false);\r\n  }\r\n\r\n  return { isVisible, openPopup, closePopup };\r\n}\r\n\r\nfunction getUsers() {\r\n  return [\r\n    { label: \"sersd\", value: \"asdf\" },\r\n    { label: \"aesd\", value: \"ghjk\" },\r\n    { label: \"zxcsd\", value: \"zxcv\" },\r\n  ];\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"title\":\r\n      return { ...state, title: action.value };\r\n    case \"description\":\r\n      return { ...state, description: action.value };\r\n    case \"participants\":\r\n      return { ...state, participants: action.value };\r\n    case \"allDay\":\r\n      return { ...state, isAllDay: action.value };\r\n    case \"date\":\r\n      const date = state.datetime\r\n        .year(action.value.year())\r\n        .month(action.value.month())\r\n        .date(action.value.date());\r\n      return { ...state, datetime: date };\r\n    case \"timeRange\":\r\n      let [start, end] = action.value;\r\n      const hour = start.hour();\r\n      const min = start.minute();\r\n      const time = state.datetime.hour(hour).minute(min);\r\n      return { ...state, datetime: time, duration: end.diff(start, \"minute\") };\r\n    case \"dateRange\":\r\n      return {\r\n        ...state,\r\n        datetime: action.value[0],\r\n        duration: action.value[1].diff(action.value[0], \"day\"),\r\n      };\r\n  }\r\n}\r\n\r\nfunction useEvent(datetime, event) {\r\n  const [info, dispatchInfo] = useReducer(\r\n    reducer,\r\n    getEventInfo(datetime, event)\r\n  );\r\n  const [options, setOptions] = useState(parseRRule());\r\n\r\n  return { info, dispatchInfo, options, setOptions };\r\n}\r\n\r\nfunction getEventInfo(datetime, event = 0) {\r\n  if (event) {\r\n    // modify date in controller?\r\n    return event;\r\n  }\r\n\r\n  const round = Math.ceil(datetime.minute() / 15);\r\n\r\n  const eventTemplate = {\r\n    userId: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    datetime: datetime.minute(round * 15),\r\n    participants: [],\r\n    duration: 0,\r\n    isAllDay: false,\r\n    isRepeating: false,\r\n    rrule: \"\",\r\n    repeatUntil: null,\r\n  };\r\n\r\n  return eventTemplate;\r\n}\r\n\r\nfunction parseRRule() {\r\n  // let rrule = RRule.parseString(\"RRULE:FREQ=MONTHLY;BYDAY=-1TH,3TH\");\r\n  // console.log(rrule);\r\n  // rrule > toText > parseText > options\r\n  const options = {\r\n    freq: \"\",\r\n    interval: 0,\r\n    wkst: \"\",\r\n    until: null,\r\n    byweekno: [],\r\n    byweekDay: [],\r\n    bymonthDay: 0,\r\n  };\r\n  return options;\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\schedule\\week\\Week.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\day\\Day.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\Month.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Header.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Schedule.js",["99","100"],"import { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../App\";\r\nimport styled from \"styled-components\";\r\nimport Grid from \"./Grid\";\r\nimport Event from \"./Event\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Board = styled.div`\r\n  position: relative;\r\n  width: 95%;\r\n`;\r\n\r\nexport default function Schedule(props) {\r\n  const user = useContext(UserContext); //remove reminders\r\n  const [events, setEvents] = useState(getEvents(props.date, props.calendars)); //not all day, within one day\r\n\r\n  return (\r\n    <Container>\r\n      <Board>\r\n        {events.map((e) => (\r\n          <Event {...e} />\r\n        ))}\r\n      </Board>\r\n      <Grid />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction getEvents(date, users) {\r\n  let events = [];\r\n  for (let user of users) {\r\n    events = events.concat(getUserEvents(date, user));\r\n  }\r\n  events.sort((a, b) => a.event.start - b.event.start);\r\n  events = positionEvents(events);\r\n  return events;\r\n}\r\n\r\nfunction getUserEvents(date, user) {\r\n  //get user events, add color\r\n  return [\r\n    {\r\n      event: {\r\n        userId: \"userid1234\",\r\n        title: \"run\",\r\n        description: \"go for a run\",\r\n        datetime: \"2020-12-21 10:23\", // '2004-10-19 10:23:54' need?\r\n        duration: 45 * 60,\r\n        participants: [{ name: \"sdf\" }],\r\n      },\r\n      style: { color: user.color },\r\n    },\r\n  ];\r\n}\r\n\r\nfunction positionEvents(events) {\r\n  for (let i = 0; i < events.length; i++) {\r\n    let start = dayjs(events[i].event.datetime).unix();\r\n    let end = start + events[i].event.duration;\r\n    console.log(start);\r\n    let top = ((start - dayjs().startOf(\"day\").unix()) / 900) * 10;\r\n    let height = ((end - start) / 900) * 10;\r\n    let prev = 0;\r\n    let next = 0;\r\n    let j = i - 1;\r\n    let k = i + 1;\r\n    while (\r\n      j >= 0 &&\r\n      dayjs(events[j].event.datetime).unix() + events[j].event.duration >= start\r\n    ) {\r\n      prev++;\r\n      j--;\r\n    }\r\n    while (k < events.length && dayjs(events[k].event.datetime).unix() <= end) {\r\n      next++;\r\n      k++;\r\n    }\r\n    let left = (100 / (prev + next + 1)) * prev;\r\n    let width =\r\n      next === 0\r\n        ? prev === 0\r\n          ? 100\r\n          : 100 / (prev + 1)\r\n        : (17 / 20) * (2 / (prev + next + 1)) * 100;\r\n    events[i].style = {\r\n      ...events[i].style,\r\n      top,\r\n      height,\r\n      left,\r\n      width,\r\n      z: i + 5,\r\n    };\r\n  }\r\n  return events;\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\schedule\\Timeline.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthTile.js",["101","102"],"C:\\Programming\\Calendar\\client\\src\\schedule\\Event.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Grid.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\RepeatPopup.js",["103","104"],"import styled from \"styled-components\";\r\nimport { Modal, Space, Select, InputNumber, Radio, DatePicker } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst PopupContainer = styled(Modal)`\r\n  top: 50px;\r\n  .ant-modal-content {\r\n    border-radius: 10px !important;\r\n    .ant-modal-header {\r\n      border-radius: 10px !important;\r\n    }\r\n    .ant-modal-footer > button {\r\n      border-radius: 5px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeekdayButton = styled.div`\r\n  background-color: lightblue;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2em;\r\n  height: 2em;\r\n  border-radius: 1em;\r\n`;\r\n\r\nconst BlockRadioButton = styled(Radio)`\r\n  display: block;\r\n  line-height: 3rem;\r\n`;\r\n\r\nexport default function RepeatPopup(props) {\r\n  const [period, setPeriod] = useState(\"day\");\r\n  const [weekdays, setWeekdays] = useState([]);\r\n\r\n  function showPeriodOptions() {\r\n    if (period === \"day\" || period === \"year\") {\r\n      return;\r\n    } else if (period === \"week\") {\r\n      return weekOptions();\r\n    } else if (period === \"month\") {\r\n      return monthOptions();\r\n    }\r\n  }\r\n\r\n  function weekOptions() {\r\n    return (\r\n      <div>\r\n        <p>Repeat On</p>\r\n        <Space direction=\"horizontal\" size=\"small\">\r\n          <WeekdayButton>S</WeekdayButton>\r\n          <WeekdayButton>M</WeekdayButton>\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function monthOptions() {\r\n    return (\r\n      <Select>\r\n        <Option>Monthly on date</Option>\r\n        <Option>Monthly on number weekday</Option>\r\n        <Option>Monthly on last? weekday</Option>\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PopupContainer\r\n      visible={true}\r\n      onOk={props.closePopup}\r\n      onCancel={props.closePopup}\r\n      title=\"Custom\"\r\n    >\r\n      <Space direction=\"vertical\" size=\"middle\">\r\n        <Space direction=\"horizontal\">\r\n          Repeat Every\r\n          <InputNumber min={1} defaultValue={1} />\r\n          <Select defaultValue=\"day\" onChange={(value) => setPeriod(value)}>\r\n            <Option value=\"day\">Day</Option>\r\n            <Option value=\"week\">Week</Option>\r\n            <Option value=\"month\">Month</Option>\r\n            <Option value=\"year\">Year</Option>\r\n          </Select>\r\n        </Space>\r\n        {showPeriodOptions()}\r\n        Ends\r\n        <Radio.Group value={1}>\r\n          <BlockRadioButton value={1}>Never</BlockRadioButton>\r\n          <BlockRadioButton>\r\n            On <DatePicker style={{ marginLeft: \"1rem\" }} />\r\n          </BlockRadioButton>\r\n          <BlockRadioButton>\r\n            After <InputNumber style={{ margin: \"0 1rem\" }} /> Occurrences\r\n          </BlockRadioButton>\r\n        </Radio.Group>\r\n      </Space>\r\n    </PopupContainer>\r\n  );\r\n}\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":10,"nodeType":"111","messageId":"112","endLine":20,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":20,"column":16,"nodeType":"111","messageId":"112","endLine":20,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":78,"column":6,"nodeType":"116","endLine":78,"endColumn":12,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":5,"column":13,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"109","severity":1,"message":"118","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":13},{"ruleId":"109","severity":1,"message":"119","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":13},{"ruleId":"109","severity":1,"message":"120","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":13},{"ruleId":"109","severity":1,"message":"121","line":14,"column":17,"nodeType":"111","messageId":"112","endLine":14,"endColumn":25},{"ruleId":"109","severity":1,"message":"122","line":14,"column":27,"nodeType":"111","messageId":"112","endLine":14,"endColumn":35},{"ruleId":"109","severity":1,"message":"123","line":16,"column":7,"nodeType":"111","messageId":"112","endLine":16,"endColumn":15},{"ruleId":"109","severity":1,"message":"124","line":57,"column":31,"nodeType":"111","messageId":"112","endLine":57,"endColumn":38},{"ruleId":"109","severity":1,"message":"125","line":57,"column":40,"nodeType":"111","messageId":"112","endLine":57,"endColumn":50},{"ruleId":"126","severity":1,"message":"127","line":202,"column":3,"nodeType":"128","messageId":"129","endLine":229,"endColumn":4},{"ruleId":"109","severity":1,"message":"130","line":19,"column":9,"nodeType":"111","messageId":"112","endLine":19,"endColumn":13},{"ruleId":"109","severity":1,"message":"131","line":20,"column":18,"nodeType":"111","messageId":"112","endLine":20,"endColumn":27},{"ruleId":"109","severity":1,"message":"118","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"130","line":6,"column":9,"nodeType":"111","messageId":"112","endLine":6,"endColumn":13},{"ruleId":"109","severity":1,"message":"123","line":37,"column":10,"nodeType":"111","messageId":"112","endLine":37,"endColumn":18},{"ruleId":"109","severity":1,"message":"132","line":37,"column":20,"nodeType":"111","messageId":"112","endLine":37,"endColumn":31},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'date' is assigned a value but never used.","Identifier","unusedVar","'setDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'incrementTime'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'dayjs' is defined but never used.","'useEffect' is defined but never used.","'RRule' is defined but never used.","'RRuleSet' is defined but never used.","'rrulestr' is defined but never used.","'weekdays' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'user' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'setWeekdays' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [date, incrementTime]",{"range":"138","text":"139"},[1934,1940],"[date, incrementTime]"]
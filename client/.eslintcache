[{"C:\\Programming\\Calendar\\client\\src\\index.js":"1","C:\\Programming\\Calendar\\client\\src\\App.js":"2","C:\\Programming\\Calendar\\client\\src\\layout\\Home.js":"3","C:\\Programming\\Calendar\\client\\src\\login\\Login.js":"4","C:\\Programming\\Calendar\\client\\src\\layout\\Navbar.js":"5","C:\\Programming\\Calendar\\client\\src\\layout\\Sidebar.js":"6","C:\\Programming\\Calendar\\client\\src\\layout\\Content.js":"7","C:\\Programming\\Calendar\\client\\src\\layout\\Contact.js":"8","C:\\Programming\\Calendar\\client\\src\\event_info\\Popup.js":"9","C:\\Programming\\Calendar\\client\\src\\schedule\\week\\Week.js":"10","C:\\Programming\\Calendar\\client\\src\\schedule\\day\\Day.js":"11","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\Month.js":"12","C:\\Programming\\Calendar\\client\\src\\schedule\\Header.js":"13","C:\\Programming\\Calendar\\client\\src\\schedule\\Schedule.js":"14","C:\\Programming\\Calendar\\client\\src\\schedule\\Timeline.js":"15","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthTile.js":"16","C:\\Programming\\Calendar\\client\\src\\schedule\\Event.js":"17","C:\\Programming\\Calendar\\client\\src\\schedule\\Grid.js":"18","C:\\Programming\\Calendar\\client\\src\\event_info\\RepeatPopup.js":"19","C:\\Programming\\Calendar\\client\\src\\event_info\\EventTemplates.js":"20","C:\\Programming\\Calendar\\client\\src\\event_info\\EventHelpers.js":"21","C:\\Programming\\Calendar\\client\\src\\event_info\\EventPopover.js":"22","C:\\Programming\\Calendar\\client\\src\\event_info\\CustomRepeatHook.js":"23","C:\\Programming\\Calendar\\client\\src\\event_info\\BasicEventHook.js":"24"},{"size":499,"mtime":1608615488848,"results":"25","hashOfConfig":"26"},{"size":649,"mtime":1608448792806,"results":"27","hashOfConfig":"26"},{"size":3258,"mtime":1609117235066,"results":"28","hashOfConfig":"26"},{"size":692,"mtime":1608345517040,"results":"29","hashOfConfig":"26"},{"size":2467,"mtime":1608792753165,"results":"30","hashOfConfig":"26"},{"size":2067,"mtime":1609466272709,"results":"31","hashOfConfig":"26"},{"size":1668,"mtime":1609037927360,"results":"32","hashOfConfig":"26"},{"size":1118,"mtime":1608445103786,"results":"33","hashOfConfig":"26"},{"size":5557,"mtime":1609469232946,"results":"34","hashOfConfig":"26"},{"size":1286,"mtime":1608511704520,"results":"35","hashOfConfig":"26"},{"size":1755,"mtime":1608511685182,"results":"36","hashOfConfig":"26"},{"size":1488,"mtime":1609037928820,"results":"37","hashOfConfig":"26"},{"size":938,"mtime":1608447645996,"results":"38","hashOfConfig":"26"},{"size":4285,"mtime":1609483131630,"results":"39","hashOfConfig":"26"},{"size":1221,"mtime":1608348922289,"results":"40","hashOfConfig":"26"},{"size":407,"mtime":1609037928127,"results":"41","hashOfConfig":"26"},{"size":1493,"mtime":1609481950920,"results":"42","hashOfConfig":"26"},{"size":729,"mtime":1608446750048,"results":"43","hashOfConfig":"26"},{"size":4858,"mtime":1609463017579,"results":"44","hashOfConfig":"26"},{"size":410,"mtime":1609465610967,"results":"45","hashOfConfig":"26"},{"size":2209,"mtime":1609392873451,"results":"46","hashOfConfig":"26"},{"size":4573,"mtime":1609481998266,"results":"47","hashOfConfig":"26"},{"size":5039,"mtime":1609465554425,"results":"48","hashOfConfig":"26"},{"size":4674,"mtime":1609464499122,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ezpajk",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"C:\\Programming\\Calendar\\client\\src\\index.js",[],["106","107"],"C:\\Programming\\Calendar\\client\\src\\App.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Home.js",["108"],"import { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./Navbar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Content from \"./Content\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst SubContainer = styled.div`\r\n  flex: 5;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default function Home(props) {\r\n  const [period, setPeriod] = useState(\"week\");\r\n  const { date, setDate, setDateOnly } = useDate();\r\n  const { calendars, updateCalendars, activeCalendars } = useCalendarSelector(\r\n    props.userId\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Sidebar\r\n        date={date}\r\n        setDateOnly={setDateOnly}\r\n        calendars={calendars}\r\n        updateCalendars={updateCalendars}\r\n      />\r\n      <SubContainer>\r\n        <Navbar\r\n          date={date}\r\n          setDate={setDate}\r\n          period={period}\r\n          setPeriod={setPeriod}\r\n        />\r\n        <Content\r\n          date={date}\r\n          setDateOnly={setDateOnly}\r\n          period={period}\r\n          setPeriod={setPeriod}\r\n          calendars={activeCalendars.current}\r\n        />\r\n      </SubContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction useDate() {\r\n  const [date, setDate] = useState(roundDate());\r\n  const first = useRef(true);\r\n\r\n  function roundDate() {\r\n    let date = dayjs();\r\n    const time = Math.floor(date.minute() / 5);\r\n    date = date.minute(5 * time).second(0);\r\n    return date;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (first.current) {\r\n      const diff = date.add(5, \"minute\").diff(dayjs(), \"second\");\r\n      setTimeout(() => {\r\n        timer = incrementTime();\r\n      }, diff * 1000);\r\n      first.current = false;\r\n    } else {\r\n      timer = incrementTime();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [date]);\r\n\r\n  function incrementTime() {\r\n    const timer = setInterval(() => {\r\n      setDate(date.minute(date.minute() + 5));\r\n    }, 5 * 60 * 1000);\r\n    return timer;\r\n  }\r\n\r\n  function setDateOnly(dateObj) {\r\n    setDate(\r\n      date\r\n        .year(dateObj.getFullYear())\r\n        .month(dateObj.getMonth())\r\n        .date(dateObj.getDate())\r\n    );\r\n  }\r\n\r\n  return { date, setDate, setDateOnly };\r\n}\r\n\r\nfunction useCalendarSelector(userId) {\r\n  const [calendars, setCalendars] = useState(getCalendars(userId));\r\n  const activeCalendars = useRef(null);\r\n  activeCalendars.current = calendars.filter((i) => i.checked);\r\n\r\n  function getCalendars(userId) {\r\n    // get calendars { label: \"My Calendar\", id: userId, checked: true, color: blue }\r\n    return [\r\n      { label: \"My Calendar\", id: userId, checked: true, color: \"red\" },\r\n      { label: \"user\", id: userId, checked: false, color: \"green\" },\r\n      { label: \"ben\", id: userId, checked: false, color: \"blue\" },\r\n      { label: \"tom\", id: userId, checked: false, color: \"purple\" },\r\n    ];\r\n  }\r\n\r\n  function updateCalendars(label) {\r\n    setCalendars(\r\n      calendars.map((i) =>\r\n        i.label === label ? { ...i, checked: !i.checked } : i\r\n      )\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    activeCalendars.current = calendars.filter((i) => i.checked);\r\n  }, [calendars]);\r\n\r\n  return { calendars, updateCalendars, activeCalendars };\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\login\\Login.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Navbar.js",["109"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Badge, Select, Space } from \"antd\";\r\nimport { UserOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport * as dayjs from \"dayjs\";\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  margin: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst DateNav = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background: white;\r\n  border-radius: 1rem;\r\n  & > h2 {\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: default;\r\n  }\r\n\r\n  & > .anticon {\r\n    margin: 0 1rem;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  & > span:hover {\r\n    background-color: lightgrey;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FriendIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n\r\n  &:hover {\r\n    background-color: rgb(156, 174, 185);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default function Navbar(props) {\r\n  const { Option } = Select;\r\n  const { logout } = useAuth0();\r\n\r\n  function displayDate() {\r\n    if (props.period !== \"day\") {\r\n      return props.date.format(\"MMMM\");\r\n    }\r\n    return props.date.format(\"D MMMM\");\r\n  }\r\n\r\n  function incrementDate() {\r\n    props.setDate(props.date.add(1, props.period));\r\n  }\r\n\r\n  function decrementDate() {\r\n    props.setDate(props.date.subtract(1, props.period));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <DateNav>\r\n        <LeftOutlined onClick={decrementDate} />\r\n        <h2>{displayDate()}</h2>\r\n        <RightOutlined onClick={incrementDate} />\r\n      </DateNav>\r\n      <Space size={25} align=\"center\">\r\n        <Select\r\n          defaultValue=\"day\"\r\n          value={props.period}\r\n          onChange={props.setPeriod}\r\n        >\r\n          <Option value=\"day\">Day</Option>\r\n          <Option value=\"week\">Week</Option>\r\n          <Option value=\"month\">Month</Option>\r\n        </Select>\r\n        <FriendIcon>\r\n          <Badge count={5} size=\"small\">\r\n            <UserOutlined\r\n              className=\"icon\"\r\n              style={{\r\n                fontSize: \"1.3rem\",\r\n              }}\r\n            />\r\n          </Badge>\r\n        </FriendIcon>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"medium\"\r\n          shape=\"round\"\r\n          onClick={() => logout({ returnTo: window.location.origin })}\r\n        >\r\n          Log Out\r\n        </Button>\r\n      </Space>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\layout\\Sidebar.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Content.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Contact.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\Popup.js",["110"],"import styled from \"styled-components\";\r\nimport { useState, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Space,\r\n  Input,\r\n  Select,\r\n  DatePicker,\r\n  TimePicker,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport RepeatPopup, { useCustomRepeatPopup } from \"./RepeatPopup\";\r\nimport { useBasicEvent, getUsers, getRepeatValue } from \"./BasicEventHook\";\r\nimport { getDefaultRRules, getMonthOptions, getWeekday } from \"./EventHelpers\";\r\n\r\nconst PopupContainer = styled(Modal)`\r\n  top: 50px;\r\n  .ant-modal-content {\r\n    border-radius: 10px !important;\r\n    .ant-modal-header {\r\n      border-radius: 10px !important;\r\n    }\r\n    .ant-modal-footer > button {\r\n      border-radius: 5px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FullSpace = styled(Space)`\r\n  width: 100%;\r\n`;\r\n\r\nconst DateContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker: DateRangePicker } = DatePicker;\r\nconst { RangePicker: TimeRangePicker } = TimePicker;\r\nconst { Option } = Select;\r\n\r\nexport default function Popup(props) {\r\n  const select = useRef(null);\r\n  const {\r\n    info,\r\n    infoDispatch,\r\n    duration,\r\n    toggleAllDay,\r\n    setDateRange,\r\n    setSingleDate,\r\n    setTimeRange,\r\n    repeatLabel,\r\n  } = useBasicEvent(props.date, props.event);\r\n  const { isVisible, openPopup, closePopup, okPopup } = useCustomRepeatPopup(\r\n    info.start,\r\n    infoDispatch\r\n  );\r\n\r\n  function blur() {\r\n    select.current.blur();\r\n  }\r\n\r\n  function setRepeat(value) {\r\n    if (value === \"custom\") {\r\n      openPopup();\r\n    } else if (value === \"none\") {\r\n      infoDispatch({ type: \"recurring\", value: false });\r\n      infoDispatch({ type: \"rrule\", value: \"\" });\r\n    } else {\r\n      let rrule = getDefaultRRules(info.start, value);\r\n      infoDispatch({ type: \"recurring\", value: true });\r\n      infoDispatch({ type: \"rrule\", value: rrule });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupContainer\r\n        visible={true}\r\n        onOk={() => props.okPopup(info)}\r\n        onCancel={props.closePopup}\r\n        title={props.title}\r\n      >\r\n        <FullSpace direction=\"vertical\" size=\"middle\">\r\n          <Input\r\n            placeholder=\"Add Title\"\r\n            value={info.title}\r\n            onChange={(e) =>\r\n              infoDispatch({ type: \"title\", value: e.target.value })\r\n            }\r\n          />\r\n          <TextArea\r\n            rows={2}\r\n            placeholder=\"Add Description\"\r\n            value={info.description}\r\n            onChange={(e) =>\r\n              infoDispatch({ type: \"description\", value: e.target.value })\r\n            }\r\n          />\r\n          <Select\r\n            mode=\"multiple\"\r\n            placeholder=\"Add Participants\"\r\n            style={{ width: \"100%\" }}\r\n            options={getUsers()}\r\n            ref={select}\r\n            allowClear\r\n            value={info.participants}\r\n            onChange={(val) => {\r\n              infoDispatch({ type: \"attendees\", value: val });\r\n              blur();\r\n            }}\r\n          />\r\n          <DateContainer>\r\n            {info.isAllDay ? (\r\n              <DateRangePicker\r\n                allowClear={false}\r\n                value={getDates(duration.allDayStart, duration.durationDay)}\r\n                onChange={setDateRange}\r\n              />\r\n            ) : (\r\n              <>\r\n                <DatePicker\r\n                  allowClear={false}\r\n                  value={duration.datetimeStart}\r\n                  onChange={setSingleDate}\r\n                />\r\n                <TimeRangePicker\r\n                  allowClear={false}\r\n                  value={getTime(duration.datetimeStart, duration.durationMin)}\r\n                  minuteStep={15}\r\n                  format=\"h:mm a\"\r\n                  onChange={setTimeRange}\r\n                />\r\n              </>\r\n            )}\r\n          </DateContainer>\r\n          <Space direction=\"horizontal\" size=\"middle\">\r\n            <Select\r\n              value={repeatLabel}\r\n              onChange={setRepeat}\r\n              dropdownStyle={{ minWidth: \"25%\" }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <Option value=\"none\">No Repeat</Option>\r\n              <Option value=\"daily\">Daily</Option>\r\n              <Option value=\"weekly\">Weekly on {getWeekday(info.start)}</Option>\r\n              {getMonthOptions(info.start)}\r\n              <Option value=\"annually\">Annually</Option>\r\n              <Option value=\"custom\">Custom</Option>\r\n            </Select>\r\n            <Checkbox checked={info.isAllDay} onChange={toggleAllDay}>\r\n              All Day\r\n            </Checkbox>\r\n          </Space>\r\n        </FullSpace>\r\n      </PopupContainer>\r\n      {isVisible && (\r\n        <RepeatPopup\r\n          cancelPopup={closePopup}\r\n          okPopup={okPopup}\r\n          rrule={info.rrule}\r\n          infoDispatch={infoDispatch}\r\n          date={info.start}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getTime(datetime, duration) {\r\n  return [datetime, datetime.add(duration, \"minute\")];\r\n}\r\n\r\nfunction getDates(datetime, duration) {\r\n  return [datetime, datetime.add(duration, \"day\")];\r\n}\r\n\r\nexport function usePopup() {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  function openPopup() {\r\n    setIsVisible(true);\r\n  }\r\n\r\n  function closePopup(e) {\r\n    e.stopPropagation();\r\n    setIsVisible(false);\r\n  }\r\n\r\n  function okPopup(info) {\r\n    setIsVisible(false);\r\n    info.start = info.start.toDate();\r\n    // only create/update, check if id present\r\n  }\r\n\r\n  return { isVisible, openPopup, closePopup, okPopup };\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\schedule\\week\\Week.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\day\\Day.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\Month.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Header.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Schedule.js",["111"],"C:\\Programming\\Calendar\\client\\src\\schedule\\Timeline.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthTile.js",["112","113"],"import dayjs from \"dayjs\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nexport default function MonthTile(props) {\r\n  const user = useContext(UserContext);\r\n\r\n  function viewDay() {\r\n    props.setDateOnly(props.date);\r\n    props.setPeriod(\"day\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"month-tile\" onClick={viewDay}>\r\n      {props.date.getDate()}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\schedule\\Event.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Grid.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\RepeatPopup.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\EventTemplates.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\EventHelpers.js",["114"],"import { Select } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport function getDefaultRRules(date, option) {\r\n  switch (option) {\r\n    case \"daily\":\r\n      return \"FREQ=DAILY;INTERVAL=1\";\r\n    case \"weekly\":\r\n      return `FREQ=WEEKLY;BYDAY=${getWeekAbbr(date)};INTERVAL=1`;\r\n    case \"monthly\":\r\n      return `FREQ=MONTHLY;BYSETPOS=${Math.ceil(\r\n        date.date() / 7\r\n      )};BYDAY=${getWeekAbbr(date)};INTERVAL=1`;\r\n\r\n    case \"monthly-last\":\r\n      return `FREQ=MONTHLY;BYSETPOS=-1;BYDAY=${getWeekAbbr(date)};INTERVAL=1`;\r\n\r\n    case \"annually\":\r\n      return `FREQ=YEARLY;BYMONTH=${\r\n        date.month() + 1\r\n      };BYMONTHDAY=${date.date()};INTERVAL=1`;\r\n  }\r\n}\r\n\r\nexport function getMonthOptions(date) {\r\n  const week = Math.ceil(date.date() / 7);\r\n  const lastdate = date.endOf(\"month\").date();\r\n  while (lastdate - 7 >= date.date()) {\r\n    date = date.add(7, \"day\");\r\n  }\r\n  const last = Math.ceil(date.date() / 7);\r\n  if (week === last) {\r\n    if (week === 4) {\r\n      return (\r\n        <>\r\n          <Option value=\"monthly\">\r\n            Monthly on the Fourth {getWeekday(date)}\r\n          </Option>\r\n          <Option value=\"monthly-last\">\r\n            Monthly on the Last {getWeekday(date)}\r\n          </Option>\r\n        </>\r\n      );\r\n    } else if (week === 5) {\r\n      return (\r\n        <Option value=\"monthly-last\">\r\n          Monthly on the Last {getWeekday(date)}\r\n        </Option>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <Option value=\"monthly\">\r\n      Monthly on the {weekNumber[week - 1]} {getWeekday(date)}\r\n    </Option>\r\n  );\r\n}\r\n\r\nexport function getWeekday(date) {\r\n  return weekdays[date.day()];\r\n}\r\n\r\nfunction getWeekAbbr(date) {\r\n  return weekdayAbbr[date.day()];\r\n}\r\n\r\nexport function getStartTime(datetime) {\r\n  return dayjs(datetime).format(\"h:mma\");\r\n}\r\n\r\nexport function getEndTime(datetime, duration) {\r\n  return dayjs(datetime).add(duration, \"minute\").format(\"h:mma\");\r\n}\r\n\r\nconst weekdays = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nconst weekNumber = [\"First\", \"Second\", \"Third\", \"Fourth\", \"Last\"];\r\n\r\nconst weekdayAbbr = [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"];\r\n","C:\\Programming\\Calendar\\client\\src\\event_info\\EventPopover.js",["115"],"C:\\Programming\\Calendar\\client\\src\\event_info\\CustomRepeatHook.js",["116","117","118","119","120"],"import { useState, useReducer } from \"react\";\r\nimport RRule from \"rrule\";\r\n\r\nexport default function useCustomRepeat(rrule, date) {\r\n  const [options, optionsDispatch] = useReducer(\r\n    optionsReducer,\r\n    parseRRule(rrule, date)\r\n  );\r\n  const [count, setCount] = useState(5);\r\n  const [until, setUntil] = useState(date);\r\n\r\n  function changePeriod(period, date) {\r\n    optionsDispatch({\r\n      type: \"custom\",\r\n      value: getDefaultPeriodOptions(period, date),\r\n    });\r\n  }\r\n\r\n  function isWeekdaySelected(weekday) {\r\n    return options.byweekday.includes(weekday);\r\n  }\r\n\r\n  function toggleWeekday(weekday) {\r\n    if (options.byweekday.includes(weekday)) {\r\n      if (options.byweekday.length > 1) {\r\n        const weekdays = options.byweekday.filter((i) => i != weekday);\r\n        optionsDispatch({ type: \"byweekday\", value: weekdays });\r\n      }\r\n    } else {\r\n      let weekdays = options.byweekday;\r\n      weekdays.push(weekday);\r\n      weekdays.sort();\r\n      optionsDispatch({ type: \"byweekday\", value: options.byweekday });\r\n    }\r\n  }\r\n\r\n  function changeMonthRepeat(type, date) {\r\n    optionsDispatch({\r\n      type: \"custom\",\r\n      value: getMonthRepeatOptions(type, date),\r\n    });\r\n  }\r\n\r\n  function getMonthValue() {\r\n    if (options.bymonthday) {\r\n      return \"monthly-date\";\r\n    }\r\n    if (options.bysetpos === -1) {\r\n      return \"monthly-last\";\r\n    }\r\n    return \"monthly\";\r\n  }\r\n\r\n  function getEnd() {\r\n    if (options.count) {\r\n      return 3;\r\n    }\r\n    if (options.until) {\r\n      return 2;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  function setEnd(value) {\r\n    switch (value) {\r\n      case 1:\r\n        setRepeatForever();\r\n        break;\r\n      case 2:\r\n        setRepeatUntil();\r\n        break;\r\n      case 3:\r\n        setRepeatCount();\r\n        break;\r\n    }\r\n  }\r\n\r\n  function setRepeatForever() {\r\n    optionsDispatch({ type: \"count\", value: 0 });\r\n    optionsDispatch({ type: \"until\", value: null });\r\n  }\r\n\r\n  function setRepeatUntil() {\r\n    optionsDispatch({ type: \"count\", value: 0 });\r\n    optionsDispatch({ type: \"until\", value: until.toDate() });\r\n  }\r\n\r\n  function setRepeatCount() {\r\n    optionsDispatch({ type: \"until\", value: null });\r\n    optionsDispatch({ type: \"count\", value: count });\r\n  }\r\n\r\n  function changeCount(num) {\r\n    setCount(num);\r\n    optionsDispatch({ type: \"count\", value: num });\r\n  }\r\n\r\n  function changeUntil(date) {\r\n    setUntil(date);\r\n    optionsDispatch({ type: \"until\", value: date.toDate() });\r\n  }\r\n\r\n  return {\r\n    options,\r\n    optionsDispatch,\r\n    changePeriod,\r\n    isWeekdaySelected,\r\n    toggleWeekday,\r\n    changeMonthRepeat,\r\n    getMonthValue,\r\n    getEnd,\r\n    setEnd,\r\n    count,\r\n    changeCount,\r\n    until,\r\n    changeUntil,\r\n  };\r\n}\r\n\r\nfunction optionsReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"interval\":\r\n      return { ...state, interval: action.value };\r\n    case \"until\": {\r\n      if (action.value) {\r\n        return { ...state, until: action.value };\r\n      }\r\n      const { until, ...newState } = state;\r\n      return newState;\r\n    }\r\n    case \"count\": {\r\n      if (action.value) {\r\n        return { ...state, count: action.value };\r\n      }\r\n      const { count, ...newState } = state;\r\n      return newState;\r\n    }\r\n    case \"byweekday\":\r\n      return { ...state, byweekday: action.value };\r\n    case \"custom\": {\r\n      const { dtstart, count, until } = state;\r\n      const newState = { ...action.value, dtstart, until, count };\r\n      Object.keys(newState).forEach((key) =>\r\n        newState[key] === undefined ? delete newState[key] : {}\r\n      );\r\n      return newState;\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseRRule(rrule, date) {\r\n  if (rrule) {\r\n    const options = RRule.parseString(rrule);\r\n    if (options.byweekday) {\r\n      options.byweekday = options.byweekday.map((i) => i.weekday);\r\n    }\r\n    return options;\r\n  }\r\n  return { freq: 3, interval: 1, dtstart: date.toDate() };\r\n}\r\n\r\nfunction getDefaultPeriodOptions(val, date) {\r\n  switch (val) {\r\n    case 0:\r\n      return {\r\n        freq: 0,\r\n        interval: 1,\r\n        bymonth: date.month() + 1,\r\n        bymonthday: date.date(),\r\n      };\r\n    case 1:\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        bymonthday: date.date(),\r\n      };\r\n    case 2:\r\n      let day = date.day() === 0 ? 6 : date.day() - 1;\r\n      return {\r\n        freq: 2,\r\n        interval: 1,\r\n        byweekday: [day],\r\n      };\r\n    case 3:\r\n      return {\r\n        freq: 3,\r\n        interval: 1,\r\n      };\r\n  }\r\n}\r\n\r\nfunction getMonthRepeatOptions(type, date) {\r\n  let day = date.day() === 0 ? 6 : date.day() - 1;\r\n  switch (type) {\r\n    case \"monthly-date\":\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        bymonthday: date.date(),\r\n      };\r\n    case \"monthly-last\":\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        byweekday: [day],\r\n        bysetpos: -1,\r\n      };\r\n    case \"monthly\":\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        byweekday: [day],\r\n        bysetpos: Math.ceil(date.date() / 7),\r\n      };\r\n  }\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\event_info\\BasicEventHook.js",["121","122"],"import { useState, useReducer, useEffect } from \"react\";\r\nimport RRule, { rrulestr } from \"rrule\";\r\nimport { eventTemplate, getDurationTemplate } from \"./EventTemplates\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport function getUsers() {\r\n  return [\r\n    { label: \"sersd\", value: \"asdf\" },\r\n    { label: \"aesd\", value: \"ghjk\" },\r\n    { label: \"zxcsd\", value: \"zxcv\" },\r\n  ];\r\n}\r\n\r\nexport function useBasicEvent(datetime, event) {\r\n  const [info, infoDispatch] = useReducer(\r\n    infoReducer,\r\n    getEventInfo(datetime, event)\r\n  );\r\n  const [duration, setDuration] = useState(getEventDuration(datetime, event));\r\n  const [repeatLabel, setRepeatLabel] = useState(getRepeatValue(info.rrule));\r\n\r\n  function toggleAllDay(e) {\r\n    if (info.isAllDay) {\r\n      infoDispatch({ type: \"start\", value: duration.datetimeStart });\r\n      infoDispatch({ type: \"duration\", value: duration.durationMin });\r\n    } else {\r\n      infoDispatch({ type: \"start\", value: duration.allDayStart });\r\n      infoDispatch({ type: \"duration\", value: duration.durationDay });\r\n    }\r\n    infoDispatch({ type: \"allDay\", value: e.target.checked });\r\n  }\r\n\r\n  function setDateRange(dateRange) {\r\n    const durationDay = getDuration(dateRange, \"day\");\r\n    infoDispatch({ type: \"start\", value: dateRange[0] });\r\n    infoDispatch({ type: \"duration\", value: durationDay });\r\n    setDuration({ ...duration, allDayStart: dateRange[0], durationDay });\r\n  }\r\n\r\n  function setSingleDate(date) {\r\n    infoDispatch({ type: \"start\", value: date });\r\n    setDuration({ ...duration, datetimeStart: date });\r\n  }\r\n\r\n  function setTimeRange(timeRange) {\r\n    const durationMin = getDuration(timeRange, \"minute\");\r\n    infoDispatch({ type: \"duration\", value: durationMin });\r\n    const hour = timeRange[0].hour();\r\n    const min = timeRange[0].minute();\r\n    const datetimeStart = duration.datetimeStart.hour(hour).minute(min);\r\n    setDuration({ ...duration, datetimeStart, durationMin });\r\n    infoDispatch({ type: \"start\", value: datetimeStart });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setRepeatLabel(getRepeatValue(info.rrule));\r\n  }, [info.rrule]);\r\n\r\n  return {\r\n    info,\r\n    infoDispatch,\r\n    duration,\r\n    toggleAllDay,\r\n    setDateRange,\r\n    setSingleDate,\r\n    setTimeRange,\r\n    repeatLabel,\r\n  };\r\n}\r\n\r\nfunction infoReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"title\":\r\n      return { ...state, title: action.value };\r\n    case \"description\":\r\n      return { ...state, description: action.value };\r\n    case \"attendees\":\r\n      return { ...state, attendees: action.value };\r\n    case \"allDay\":\r\n      return { ...state, isAllDay: action.value };\r\n    case \"start\":\r\n      return { ...state, start: action.value };\r\n    case \"end\":\r\n      return { ...state, end: action.value };\r\n    case \"duration\":\r\n      return { ...state, duration: action.value };\r\n    case \"recurring\":\r\n      return { ...state, isRecurring: action.value };\r\n    case \"rrule\":\r\n      return { ...state, rrule: action.value };\r\n  }\r\n}\r\n\r\nfunction getEventInfo(datetime, event) {\r\n  if (event) {\r\n    event.start = dayjs(event.start);\r\n    return event;\r\n  }\r\n\r\n  const round = Math.ceil(datetime.minute() / 15);\r\n  eventTemplate.start = datetime.minute(round * 15);\r\n\r\n  return eventTemplate;\r\n}\r\n\r\nfunction getEventDuration(datetime, event) {\r\n  let template = getDurationTemplate(datetime);\r\n  if (event) {\r\n    if (event.isAllDay) {\r\n      template.allDayStart = dayjs(event.start);\r\n      template.durationDay = event.duration;\r\n    } else {\r\n      template.datetimeStart = dayjs(event.start);\r\n      template.durationMin = event.duration;\r\n    }\r\n    return template;\r\n  }\r\n\r\n  const round = Math.ceil(datetime.minute() / 15);\r\n  template.datetimeStart = datetime.minute(round * 15);\r\n  return template;\r\n}\r\n\r\nexport function getDuration(dates, type) {\r\n  return dates[1].diff(dates[0], type);\r\n}\r\n\r\nexport function getRepeatValue(rrule) {\r\n  if (rrule === \"\") {\r\n    return \"none\";\r\n  }\r\n  let text = rrulestr(rrule).toText();\r\n  text = text\r\n    .replace(\"every day \", \"Daily \")\r\n    .replace(\"every week \", \"Weekly \")\r\n    .replace(\"every month \", \"Monthly \")\r\n    .replace(\"every year \", \"Annually \")\r\n    .replace(\"every\", \"Every\");\r\n\r\n  let options = RRule.parseString(rrule);\r\n  if (options.bysetpos) {\r\n    text = text.replace(\"on \", `on the ${getPosition(options.bysetpos)} `);\r\n  }\r\n\r\n  if (text.length > 50) {\r\n    return text.substr(0, 50) + \"...\";\r\n  }\r\n\r\n  return text;\r\n}\r\n\r\nfunction getPosition(i) {\r\n  switch (i) {\r\n    case -1:\r\n      return \"Last\";\r\n    case 1:\r\n      return \"First\";\r\n    case 2:\r\n      return \"Second\";\r\n    case 3:\r\n      return \"Third\";\r\n    case 4:\r\n      return \"Fourth\";\r\n  }\r\n}\r\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":76,"column":6,"nodeType":"129","endLine":76,"endColumn":12,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":5,"column":13,"nodeType":"133","messageId":"134","endLine":5,"endColumn":18},{"ruleId":"131","severity":1,"message":"135","line":13,"column":35,"nodeType":"133","messageId":"134","endLine":13,"endColumn":49},{"ruleId":"131","severity":1,"message":"136","line":19,"column":18,"nodeType":"133","messageId":"134","endLine":19,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"137","line":6,"column":9,"nodeType":"133","messageId":"134","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":7,"column":3,"nodeType":"140","messageId":"141","endLine":24,"endColumn":4},{"ruleId":"131","severity":1,"message":"137","line":160,"column":9,"nodeType":"133","messageId":"134","endLine":160,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":26,"column":60,"nodeType":"144","messageId":"145","endLine":26,"endColumn":62},{"ruleId":"138","severity":1,"message":"139","line":65,"column":5,"nodeType":"140","messageId":"141","endLine":75,"endColumn":6},{"ruleId":"138","severity":1,"message":"139","line":121,"column":3,"nodeType":"140","messageId":"141","endLine":148,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":163,"column":3,"nodeType":"140","messageId":"141","endLine":189,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":194,"column":3,"nodeType":"140","messageId":"141","endLine":215,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":72,"column":3,"nodeType":"140","messageId":"141","endLine":91,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":153,"column":3,"nodeType":"140","messageId":"141","endLine":164,"endColumn":4},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'incrementTime'. Either include it or remove the dependency array.","ArrayExpression",["148"],"no-unused-vars","'dayjs' is defined but never used.","Identifier","unusedVar","'getRepeatValue' is defined but never used.","'setEvents' is assigned a value but never used.","'user' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [date, incrementTime]",{"range":"151","text":"152"},[1855,1861],"[date, incrementTime]"]
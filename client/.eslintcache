[{"C:\\Programming\\Calendar\\client\\src\\index.js":"1","C:\\Programming\\Calendar\\client\\src\\App.js":"2","C:\\Programming\\Calendar\\client\\src\\layout\\Home.js":"3","C:\\Programming\\Calendar\\client\\src\\login\\Login.js":"4","C:\\Programming\\Calendar\\client\\src\\layout\\Navbar.js":"5","C:\\Programming\\Calendar\\client\\src\\layout\\Sidebar.js":"6","C:\\Programming\\Calendar\\client\\src\\layout\\Content.js":"7","C:\\Programming\\Calendar\\client\\src\\event_info\\Popup.js":"8","C:\\Programming\\Calendar\\client\\src\\schedule\\week\\Week.js":"9","C:\\Programming\\Calendar\\client\\src\\schedule\\day\\Day.js":"10","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\Month.js":"11","C:\\Programming\\Calendar\\client\\src\\schedule\\Header.js":"12","C:\\Programming\\Calendar\\client\\src\\schedule\\Schedule.js":"13","C:\\Programming\\Calendar\\client\\src\\schedule\\Timeline.js":"14","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthTile.js":"15","C:\\Programming\\Calendar\\client\\src\\schedule\\Event.js":"16","C:\\Programming\\Calendar\\client\\src\\schedule\\Grid.js":"17","C:\\Programming\\Calendar\\client\\src\\event_info\\RepeatPopup.js":"18","C:\\Programming\\Calendar\\client\\src\\event_info\\EventTemplates.js":"19","C:\\Programming\\Calendar\\client\\src\\event_info\\EventHelpers.js":"20","C:\\Programming\\Calendar\\client\\src\\event_info\\EventPopover.js":"21","C:\\Programming\\Calendar\\client\\src\\event_info\\CustomRepeatHook.js":"22","C:\\Programming\\Calendar\\client\\src\\event_info\\BasicEventHook.js":"23","C:\\Programming\\Calendar\\client\\src\\schedule\\AllDayArea.js":"24","C:\\Programming\\Calendar\\client\\src\\schedule\\AllDayEvent.js":"25","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthAllDayEvent.js":"26","C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthDayEvent.js":"27","C:\\Programming\\Calendar\\client\\src\\contact\\Contact.js":"28","C:\\Programming\\Calendar\\client\\src\\contact\\AddContact.js":"29","C:\\Programming\\Calendar\\client\\src\\contact\\ContactRequest.js":"30"},{"size":499,"mtime":1608615488848,"results":"31","hashOfConfig":"32"},{"size":1197,"mtime":1610584335292,"results":"33","hashOfConfig":"32"},{"size":3954,"mtime":1610592911703,"results":"34","hashOfConfig":"32"},{"size":641,"mtime":1609808842098,"results":"35","hashOfConfig":"32"},{"size":3869,"mtime":1610592949786,"results":"36","hashOfConfig":"32"},{"size":2654,"mtime":1609812558330,"results":"37","hashOfConfig":"32"},{"size":1670,"mtime":1609835321888,"results":"38","hashOfConfig":"32"},{"size":7529,"mtime":1609741606198,"results":"39","hashOfConfig":"32"},{"size":1976,"mtime":1609835752129,"results":"40","hashOfConfig":"32"},{"size":1971,"mtime":1609835764014,"results":"41","hashOfConfig":"32"},{"size":1627,"mtime":1609814853840,"results":"42","hashOfConfig":"32"},{"size":1213,"mtime":1609816510353,"results":"43","hashOfConfig":"32"},{"size":9728,"mtime":1610690528147,"results":"44","hashOfConfig":"32"},{"size":1221,"mtime":1608348922289,"results":"45","hashOfConfig":"32"},{"size":5274,"mtime":1609815264576,"results":"46","hashOfConfig":"32"},{"size":1553,"mtime":1610617289877,"results":"47","hashOfConfig":"32"},{"size":1160,"mtime":1609835119277,"results":"48","hashOfConfig":"32"},{"size":4858,"mtime":1609463017579,"results":"49","hashOfConfig":"32"},{"size":410,"mtime":1609465610967,"results":"50","hashOfConfig":"32"},{"size":2209,"mtime":1609392873451,"results":"51","hashOfConfig":"32"},{"size":4647,"mtime":1610690932667,"results":"52","hashOfConfig":"32"},{"size":5039,"mtime":1609465554425,"results":"53","hashOfConfig":"32"},{"size":4502,"mtime":1609740739600,"results":"54","hashOfConfig":"32"},{"size":2924,"mtime":1609635048915,"results":"55","hashOfConfig":"32"},{"size":2668,"mtime":1609816017254,"results":"56","hashOfConfig":"32"},{"size":2846,"mtime":1609815971388,"results":"57","hashOfConfig":"32"},{"size":687,"mtime":1609815954306,"results":"58","hashOfConfig":"32"},{"size":1118,"mtime":1609722469765,"results":"59","hashOfConfig":"32"},{"size":1999,"mtime":1610588907033,"results":"60","hashOfConfig":"32"},{"size":1085,"mtime":1610590838024,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"ezpajk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Programming\\Calendar\\client\\src\\index.js",[],["131","132"],"C:\\Programming\\Calendar\\client\\src\\App.js",["133","134"],"import { useAuth0 } from \"@auth0/auth0-react\";\nimport styled from \"styled-components\";\nimport Login from \"./login/Login\";\nimport Home from \"./layout/Home\";\nimport axios from \"axios\";\nimport { createContext, useEffect } from \"react\";\nimport { v5 as uuidv5 } from \"uuid\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: #f6f6f6;\n`;\n\nconst UserContext = createContext(null);\n\nfunction App() {\n  const { user, isAuthenticated } = useAuth0();\n  let userId;\n  if (isAuthenticated) {\n    let providerId = user.sub.split(\"|\")[1];\n    userId = uuidv5(providerId, process.env.REACT_APP_UUID_NAMESPACE);\n  }\n\n  useEffect(async () => {\n    if (isAuthenticated) {\n      try {\n        await axios.get(`/user/${userId}`);\n      } catch (err) {\n        if (err.response.status === 500) {\n          await axios.post(`/user`, {\n            id: userId,\n            email: user.email,\n          });\n        }\n      }\n    }\n  }, [user]);\n\n  return (\n    <Container>\n      {isAuthenticated ? (\n        <UserContext.Provider value={userId}>\n          <Home userId={userId} />\n        </UserContext.Provider>\n      ) : (\n        <Login />\n      )}\n    </Container>\n  );\n}\n\nexport { App, UserContext };\n","C:\\Programming\\Calendar\\client\\src\\layout\\Home.js",["135","136","137"],"import { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./Navbar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Content from \"./Content\";\r\nimport dayjs from \"dayjs\";\r\nimport randomColor from \"randomcolor\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst SubContainer = styled.div`\r\n  flex: 5;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default function Home(props) {\r\n  const [period, setPeriod] = useState(\"week\");\r\n  const { date, setDate, setDateOnly } = useDate();\r\n  const { calendars, updateCalendars, activeCalendars } = useCalendarSelector(\r\n    props.userId\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Sidebar\r\n        date={date}\r\n        setDateOnly={setDateOnly}\r\n        calendars={calendars}\r\n        updateCalendars={updateCalendars}\r\n      />\r\n      <SubContainer>\r\n        <Navbar\r\n          date={date}\r\n          setDate={setDate}\r\n          period={period}\r\n          setPeriod={setPeriod}\r\n        />\r\n        <Content\r\n          date={date}\r\n          setDateOnly={setDateOnly}\r\n          period={period}\r\n          setPeriod={setPeriod}\r\n          calendars={activeCalendars.current}\r\n        />\r\n      </SubContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction useDate() {\r\n  const [date, setDate] = useState(roundDate());\r\n  const first = useRef(true);\r\n\r\n  function roundDate() {\r\n    let date = dayjs();\r\n    const time = Math.floor(date.minute() / 5);\r\n    date = date.minute(5 * time).second(0);\r\n    return date;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (first.current) {\r\n      const diff = date.add(5, \"minute\").diff(dayjs(), \"second\");\r\n      timer = setTimeout(() => {\r\n        incrementTime();\r\n      }, diff * 1000);\r\n      first.current = false;\r\n    } else {\r\n      timer = setInterval(() => {\r\n        incrementTime();\r\n      }, 5 * 60 * 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [date]);\r\n\r\n  function incrementTime() {\r\n    setDate(date.minute(date.minute() + 5));\r\n  }\r\n\r\n  function setDateOnly(dateObj) {\r\n    setDate(\r\n      date\r\n        .year(dateObj.getFullYear())\r\n        .month(dateObj.getMonth())\r\n        .date(dateObj.getDate())\r\n    );\r\n  }\r\n\r\n  return { date, setDate, setDateOnly };\r\n}\r\n\r\nfunction useCalendarSelector(userId) {\r\n  const activeCalendars = useRef(null);\r\n  const [calendars, setCalendars] = useState(getCalendars(userId));\r\n  activeCalendars.current = calendars.filter((i) => i.checked);\r\n\r\n  function getCalendars(userId) {\r\n    return [\r\n      { label: \"My Calendar\", id: userId, checked: true, color: \"#3495eb\" },\r\n    ];\r\n  }\r\n\r\n  function updateCalendars(label) {\r\n    if (\r\n      calendars.filter((i) => i.checked).length === 1 &&\r\n      getCalendar(label).checked\r\n    ) {\r\n      return;\r\n    }\r\n    setCalendars(\r\n      calendars.map((i) =>\r\n        i.label === label ? { ...i, checked: !i.checked } : i\r\n      )\r\n    );\r\n  }\r\n\r\n  function getCalendar(label) {\r\n    for (let i = 0; i < calendars.length; i++) {\r\n      if (calendars[i].label === label) {\r\n        return calendars[i];\r\n      }\r\n    }\r\n    return {};\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const colors = randomColor({ seed: 4744, luminosity: \"dark\", count: 5 });\r\n    let calendars = [\r\n      { label: \"My Calendar\", id: userId, checked: true, color: \"#3495eb\" },\r\n    ];\r\n\r\n    try {\r\n      const { data: contacts } = await axios.get(\r\n        `/contact/authorized/${userId}`\r\n      );\r\n      calendars = calendars.concat(\r\n        contacts.map((contact, i) => ({\r\n          label: contact.receiver.email,\r\n          id: contact.receiver.id,\r\n          checked: false,\r\n          color: colors[i],\r\n        }))\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    setCalendars(calendars);\r\n    activeCalendars.current = calendars.filter((i) => i.checked);\r\n  }, []);\r\n\r\n  return { calendars, updateCalendars, activeCalendars };\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\login\\Login.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Navbar.js",["138","139"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Badge, Select, Space, Popover } from \"antd\";\r\nimport { UserOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport ContactRequest from \"../contact/ContactRequest\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../App\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  margin: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst DateNav = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background: white;\r\n  border-radius: 1rem;\r\n  & > h2 {\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: default;\r\n  }\r\n\r\n  & > .anticon {\r\n    margin: 0 1rem;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  & > span:hover {\r\n    background-color: #e6e6e6;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FriendIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n\r\n  &:hover {\r\n    background-color: #e6e6e6;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default function Navbar(props) {\r\n  const { Option } = Select;\r\n  const { logout } = useAuth0();\r\n  const { requests, acceptRequest, denyRequest } = useRequests();\r\n\r\n  function displayDate() {\r\n    if (props.period !== \"day\") {\r\n      return props.date.format(\"MMMM\");\r\n    }\r\n    return props.date.format(\"D MMMM\");\r\n  }\r\n\r\n  function incrementDate() {\r\n    props.setDate(props.date.add(1, props.period));\r\n  }\r\n\r\n  function decrementDate() {\r\n    props.setDate(props.date.subtract(1, props.period));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <DateNav>\r\n        <LeftOutlined onClick={decrementDate} />\r\n        <h2>{displayDate()}</h2>\r\n        <RightOutlined onClick={incrementDate} />\r\n      </DateNav>\r\n      <Space size={25} align=\"center\">\r\n        <Select\r\n          defaultValue=\"day\"\r\n          value={props.period}\r\n          onChange={props.setPeriod}\r\n        >\r\n          <Option value=\"day\">Day</Option>\r\n          <Option value=\"week\">Week</Option>\r\n          <Option value=\"month\">Month</Option>\r\n        </Select>\r\n        <Popover\r\n          trigger=\"click\"\r\n          content={\r\n            <ContactRequest\r\n              requests={requests}\r\n              acceptRequest={acceptRequest}\r\n              denyRequest={denyRequest}\r\n            />\r\n          }\r\n        >\r\n          <FriendIcon>\r\n            <Badge count={requests.length} size=\"small\">\r\n              <UserOutlined\r\n                className=\"icon\"\r\n                style={{\r\n                  fontSize: \"1.3rem\",\r\n                }}\r\n              />\r\n            </Badge>\r\n          </FriendIcon>\r\n        </Popover>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"medium\"\r\n          shape=\"round\"\r\n          onClick={() => logout({ returnTo: window.location.origin })}\r\n        >\r\n          Log Out\r\n        </Button>\r\n      </Space>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction useRequests() {\r\n  const userId = useContext(UserContext);\r\n  const [requests, setRequests] = useState([]);\r\n\r\n  async function acceptRequest(contactId) {\r\n    try {\r\n      await axios.put(`/contact/${contactId}`);\r\n      await getRequests();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function denyRequest(contactId) {\r\n    try {\r\n      await axios.delete(`/contact/${contactId}`);\r\n      await getRequests();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(async () => {\r\n    await getRequests();\r\n  }, []);\r\n\r\n  async function getRequests() {\r\n    try {\r\n      const { data: requests } = await axios.get(`/contact/requests/${userId}`);\r\n      console.log(requests[0]);\r\n      setRequests(requests);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return { requests, acceptRequest, denyRequest };\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\layout\\Sidebar.js",[],"C:\\Programming\\Calendar\\client\\src\\layout\\Content.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\Popup.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\week\\Week.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\day\\Day.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\Month.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Header.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Schedule.js",["140","141"],"C:\\Programming\\Calendar\\client\\src\\schedule\\Timeline.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthTile.js",["142","143"],"import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport dayjs from \"dayjs\";\r\nimport MonthAllDayEvent from \"./MonthAllDayEvent\";\r\nimport MonthDayEvent from \"./MonthDayEvent\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > p {\r\n    margin: 0;\r\n    color: ${(props) => (props.isSameMonth ? \"black\" : \"#cbcbcb\")};\r\n  }\r\n`;\r\n\r\nconst Ellipsis = styled.div`\r\n  position: relative;\r\n  top: -5px;\r\n  height: 1em;\r\n`;\r\n\r\nexport default function MonthTile(props) {\r\n  const { allDayEvents } = useAllDay(\r\n    props.calendars,\r\n    props.weekStart,\r\n    props.weekEnd\r\n  );\r\n\r\n  const { dayEvents } = useDayEvents(props.calendars, props.date);\r\n\r\n  function isSameMonth() {\r\n    return props.date.month() === props.currentDate.month();\r\n  }\r\n\r\n  function viewDay() {\r\n    props.setDateOnly(props.date.toDate());\r\n    props.setPeriod(\"day\");\r\n  }\r\n\r\n  function getAllDayEvents() {\r\n    const events = [];\r\n    for (let i = 0; i < allDayEvents.length && i < 2; i++) {\r\n      events.push(\r\n        <MonthAllDayEvent event={allDayEvents[i]} date={props.date} />\r\n      );\r\n    }\r\n    return events;\r\n  }\r\n\r\n  function getDayEvents(num = 2) {\r\n    let events = [];\r\n    for (let i = 0; i < dayEvents.length && i < num; i++) {\r\n      events.push(<MonthDayEvent event={dayEvents[i]} />);\r\n    }\r\n    return events;\r\n  }\r\n\r\n  function showEvents() {\r\n    const total = allDayEvents.length + dayEvents.length;\r\n    if (total > 2) {\r\n      if (allDayEvents.length >= 2) {\r\n        return (\r\n          <>\r\n            {getAllDayEvents()}\r\n            <Ellipsis>{total - 2} more</Ellipsis>\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            {getAllDayEvents()}\r\n            {getDayEvents(2 - allDayEvents.length)}\r\n            <Ellipsis>{total - 2} more</Ellipsis>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {getAllDayEvents()}\r\n        {getDayEvents()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container isSameMonth={isSameMonth()}>\r\n      <p onClick={viewDay}>{props.date.date()}</p>\r\n      {showEvents()}\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction useAllDay(calendars, start, end) {\r\n  const [allDayEvents, setAllDayEvents] = useState(\r\n    getAllDayEvents(calendars, start, end)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setAllDayEvents(getAllDayEvents(calendars, start, end));\r\n  }, [calendars]);\r\n\r\n  return { allDayEvents };\r\n}\r\n\r\nfunction getAllDayEvents(calendars, start, end) {\r\n  let events = [];\r\n  for (let i = 0; i < calendars.length; i++) {\r\n    events = events.concat(getCalendarAllDayEvents(calendars[i], start, end));\r\n  }\r\n\r\n  return events;\r\n}\r\n\r\nfunction getCalendarAllDayEvents(calendar, start, end) {\r\n  // get events(id, dates[0], dates[-1]) get array of events, add color\r\n  return [\r\n    {\r\n      id: \"\",\r\n      canonicalEventId: \"\",\r\n      datetime: dayjs(\"2021-01-05 10:30\"),\r\n      attendees: [\r\n        { email: \"attd2\", status: 1 },\r\n        { email: \"attd3\", status: 1 },\r\n      ],\r\n      canonicalEvent: {\r\n        id: \"\",\r\n        userId: \"001\",\r\n        title: \"Run\",\r\n        description: \"go for a run\",\r\n        attendees: [1000],\r\n        start: \"2020-12-21 10:30\",\r\n        end: \"2021-1-09\",\r\n        duration: 8,\r\n        isAllDay: true,\r\n        isRecurring: false,\r\n        rrule: \"\",\r\n        exceptions: [],\r\n      },\r\n      style: { color: calendar.color },\r\n      userId: \"001\",\r\n    },\r\n  ];\r\n}\r\n\r\nfunction useDayEvents(calendars, date) {\r\n  const [dayEvents, setDayEvents] = useState(getDayEvents(calendars, date));\r\n\r\n  useEffect(() => {\r\n    setDayEvents(getDayEvents(calendars, date));\r\n  }, [calendars]);\r\n\r\n  return { dayEvents };\r\n}\r\n\r\nfunction getDayEvents(calendars, date) {\r\n  let events = [];\r\n  for (let calendar of calendars) {\r\n    events = events.concat(getEvents(calendar, date));\r\n  }\r\n  events.sort((a, b) => a.datetime.diff(b.datetime));\r\n  return events;\r\n}\r\n\r\nfunction getEvents(calendar, date) {\r\n  //\r\n  return [\r\n    {\r\n      id: \"\",\r\n      canonicalEventId: \"\",\r\n      datetime: dayjs(\"2021-01-05 10:30\"),\r\n      attendees: [\r\n        { email: \"attd2\", status: 1 },\r\n        { email: \"attd3\", status: 1 },\r\n      ],\r\n      canonicalEvent: {\r\n        id: \"\",\r\n        userId: \"001\",\r\n        title: \"Run\",\r\n        description: \"go for a run\",\r\n        attendees: [1000],\r\n        start: \"2020-12-21 10:30\",\r\n        end: \"2021-1-09\",\r\n        duration: 8,\r\n        isAllDay: true,\r\n        isRecurring: false,\r\n        rrule: \"\",\r\n        exceptions: [],\r\n      },\r\n      style: { color: calendar.color },\r\n      userId: \"001\",\r\n    },\r\n    {\r\n      id: \"\",\r\n      canonicalEventId: \"\",\r\n      datetime: dayjs(\"2021-01-05 10:30\"),\r\n      attendees: [\r\n        { email: \"attd2\", status: 1 },\r\n        { email: \"attd3\", status: 1 },\r\n      ],\r\n      canonicalEvent: {\r\n        id: \"\",\r\n        userId: \"001\",\r\n        title: \"Run\",\r\n        description: \"go for a run\",\r\n        attendees: [1000],\r\n        start: \"2020-12-21 10:30\",\r\n        end: \"2021-1-09\",\r\n        duration: 8,\r\n        isAllDay: true,\r\n        isRecurring: false,\r\n        rrule: \"\",\r\n        exceptions: [],\r\n      },\r\n      style: { color: calendar.color },\r\n      userId: \"001\",\r\n    },\r\n  ];\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\schedule\\Event.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\Grid.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\RepeatPopup.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\EventTemplates.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\EventHelpers.js",["144"],"import { Select } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport function getDefaultRRules(date, option) {\r\n  switch (option) {\r\n    case \"daily\":\r\n      return \"FREQ=DAILY;INTERVAL=1\";\r\n    case \"weekly\":\r\n      return `FREQ=WEEKLY;BYDAY=${getWeekAbbr(date)};INTERVAL=1`;\r\n    case \"monthly\":\r\n      return `FREQ=MONTHLY;BYSETPOS=${Math.ceil(\r\n        date.date() / 7\r\n      )};BYDAY=${getWeekAbbr(date)};INTERVAL=1`;\r\n\r\n    case \"monthly-last\":\r\n      return `FREQ=MONTHLY;BYSETPOS=-1;BYDAY=${getWeekAbbr(date)};INTERVAL=1`;\r\n\r\n    case \"annually\":\r\n      return `FREQ=YEARLY;BYMONTH=${\r\n        date.month() + 1\r\n      };BYMONTHDAY=${date.date()};INTERVAL=1`;\r\n  }\r\n}\r\n\r\nexport function getMonthOptions(date) {\r\n  const week = Math.ceil(date.date() / 7);\r\n  const lastdate = date.endOf(\"month\").date();\r\n  while (lastdate - 7 >= date.date()) {\r\n    date = date.add(7, \"day\");\r\n  }\r\n  const last = Math.ceil(date.date() / 7);\r\n  if (week === last) {\r\n    if (week === 4) {\r\n      return (\r\n        <>\r\n          <Option value=\"monthly\">\r\n            Monthly on the Fourth {getWeekday(date)}\r\n          </Option>\r\n          <Option value=\"monthly-last\">\r\n            Monthly on the Last {getWeekday(date)}\r\n          </Option>\r\n        </>\r\n      );\r\n    } else if (week === 5) {\r\n      return (\r\n        <Option value=\"monthly-last\">\r\n          Monthly on the Last {getWeekday(date)}\r\n        </Option>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <Option value=\"monthly\">\r\n      Monthly on the {weekNumber[week - 1]} {getWeekday(date)}\r\n    </Option>\r\n  );\r\n}\r\n\r\nexport function getWeekday(date) {\r\n  return weekdays[date.day()];\r\n}\r\n\r\nfunction getWeekAbbr(date) {\r\n  return weekdayAbbr[date.day()];\r\n}\r\n\r\nexport function getStartTime(datetime) {\r\n  return dayjs(datetime).format(\"h:mma\");\r\n}\r\n\r\nexport function getEndTime(datetime, duration) {\r\n  return dayjs(datetime).add(duration, \"minute\").format(\"h:mma\");\r\n}\r\n\r\nconst weekdays = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nconst weekNumber = [\"First\", \"Second\", \"Third\", \"Fourth\", \"Last\"];\r\n\r\nconst weekdayAbbr = [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"];\r\n","C:\\Programming\\Calendar\\client\\src\\event_info\\EventPopover.js",[],"C:\\Programming\\Calendar\\client\\src\\event_info\\CustomRepeatHook.js",["145","146","147","148","149"],"import { useState, useReducer } from \"react\";\r\nimport RRule from \"rrule\";\r\n\r\nexport default function useCustomRepeat(rrule, date) {\r\n  const [options, optionsDispatch] = useReducer(\r\n    optionsReducer,\r\n    parseRRule(rrule, date)\r\n  );\r\n  const [count, setCount] = useState(5);\r\n  const [until, setUntil] = useState(date);\r\n\r\n  function changePeriod(period, date) {\r\n    optionsDispatch({\r\n      type: \"custom\",\r\n      value: getDefaultPeriodOptions(period, date),\r\n    });\r\n  }\r\n\r\n  function isWeekdaySelected(weekday) {\r\n    return options.byweekday.includes(weekday);\r\n  }\r\n\r\n  function toggleWeekday(weekday) {\r\n    if (options.byweekday.includes(weekday)) {\r\n      if (options.byweekday.length > 1) {\r\n        const weekdays = options.byweekday.filter((i) => i != weekday);\r\n        optionsDispatch({ type: \"byweekday\", value: weekdays });\r\n      }\r\n    } else {\r\n      let weekdays = options.byweekday;\r\n      weekdays.push(weekday);\r\n      weekdays.sort();\r\n      optionsDispatch({ type: \"byweekday\", value: options.byweekday });\r\n    }\r\n  }\r\n\r\n  function changeMonthRepeat(type, date) {\r\n    optionsDispatch({\r\n      type: \"custom\",\r\n      value: getMonthRepeatOptions(type, date),\r\n    });\r\n  }\r\n\r\n  function getMonthValue() {\r\n    if (options.bymonthday) {\r\n      return \"monthly-date\";\r\n    }\r\n    if (options.bysetpos === -1) {\r\n      return \"monthly-last\";\r\n    }\r\n    return \"monthly\";\r\n  }\r\n\r\n  function getEnd() {\r\n    if (options.count) {\r\n      return 3;\r\n    }\r\n    if (options.until) {\r\n      return 2;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  function setEnd(value) {\r\n    switch (value) {\r\n      case 1:\r\n        setRepeatForever();\r\n        break;\r\n      case 2:\r\n        setRepeatUntil();\r\n        break;\r\n      case 3:\r\n        setRepeatCount();\r\n        break;\r\n    }\r\n  }\r\n\r\n  function setRepeatForever() {\r\n    optionsDispatch({ type: \"count\", value: 0 });\r\n    optionsDispatch({ type: \"until\", value: null });\r\n  }\r\n\r\n  function setRepeatUntil() {\r\n    optionsDispatch({ type: \"count\", value: 0 });\r\n    optionsDispatch({ type: \"until\", value: until.toDate() });\r\n  }\r\n\r\n  function setRepeatCount() {\r\n    optionsDispatch({ type: \"until\", value: null });\r\n    optionsDispatch({ type: \"count\", value: count });\r\n  }\r\n\r\n  function changeCount(num) {\r\n    setCount(num);\r\n    optionsDispatch({ type: \"count\", value: num });\r\n  }\r\n\r\n  function changeUntil(date) {\r\n    setUntil(date);\r\n    optionsDispatch({ type: \"until\", value: date.toDate() });\r\n  }\r\n\r\n  return {\r\n    options,\r\n    optionsDispatch,\r\n    changePeriod,\r\n    isWeekdaySelected,\r\n    toggleWeekday,\r\n    changeMonthRepeat,\r\n    getMonthValue,\r\n    getEnd,\r\n    setEnd,\r\n    count,\r\n    changeCount,\r\n    until,\r\n    changeUntil,\r\n  };\r\n}\r\n\r\nfunction optionsReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"interval\":\r\n      return { ...state, interval: action.value };\r\n    case \"until\": {\r\n      if (action.value) {\r\n        return { ...state, until: action.value };\r\n      }\r\n      const { until, ...newState } = state;\r\n      return newState;\r\n    }\r\n    case \"count\": {\r\n      if (action.value) {\r\n        return { ...state, count: action.value };\r\n      }\r\n      const { count, ...newState } = state;\r\n      return newState;\r\n    }\r\n    case \"byweekday\":\r\n      return { ...state, byweekday: action.value };\r\n    case \"custom\": {\r\n      const { dtstart, count, until } = state;\r\n      const newState = { ...action.value, dtstart, until, count };\r\n      Object.keys(newState).forEach((key) =>\r\n        newState[key] === undefined ? delete newState[key] : {}\r\n      );\r\n      return newState;\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseRRule(rrule, date) {\r\n  if (rrule) {\r\n    const options = RRule.parseString(rrule);\r\n    if (options.byweekday) {\r\n      options.byweekday = options.byweekday.map((i) => i.weekday);\r\n    }\r\n    return options;\r\n  }\r\n  return { freq: 3, interval: 1, dtstart: date.toDate() };\r\n}\r\n\r\nfunction getDefaultPeriodOptions(val, date) {\r\n  switch (val) {\r\n    case 0:\r\n      return {\r\n        freq: 0,\r\n        interval: 1,\r\n        bymonth: date.month() + 1,\r\n        bymonthday: date.date(),\r\n      };\r\n    case 1:\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        bymonthday: date.date(),\r\n      };\r\n    case 2:\r\n      let day = date.day() === 0 ? 6 : date.day() - 1;\r\n      return {\r\n        freq: 2,\r\n        interval: 1,\r\n        byweekday: [day],\r\n      };\r\n    case 3:\r\n      return {\r\n        freq: 3,\r\n        interval: 1,\r\n      };\r\n  }\r\n}\r\n\r\nfunction getMonthRepeatOptions(type, date) {\r\n  let day = date.day() === 0 ? 6 : date.day() - 1;\r\n  switch (type) {\r\n    case \"monthly-date\":\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        bymonthday: date.date(),\r\n      };\r\n    case \"monthly-last\":\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        byweekday: [day],\r\n        bysetpos: -1,\r\n      };\r\n    case \"monthly\":\r\n      return {\r\n        freq: 1,\r\n        interval: 1,\r\n        byweekday: [day],\r\n        bysetpos: Math.ceil(date.date() / 7),\r\n      };\r\n  }\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\event_info\\BasicEventHook.js",["150","151"],"import { useState, useReducer, useEffect } from \"react\";\r\nimport RRule, { rrulestr } from \"rrule\";\r\nimport { eventTemplate, getDurationTemplate } from \"./EventTemplates\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport function useBasicEvent(datetime, event) {\r\n  const [info, infoDispatch] = useReducer(\r\n    infoReducer,\r\n    getEventInfo(datetime, event)\r\n  );\r\n  const [duration, setDuration] = useState(getEventDuration(datetime, event));\r\n  const [repeatLabel, setRepeatLabel] = useState(getRepeatValue(info.rrule));\r\n\r\n  function toggleAllDay(e) {\r\n    if (info.isAllDay) {\r\n      infoDispatch({ type: \"start\", value: duration.datetimeStart });\r\n      infoDispatch({ type: \"duration\", value: duration.durationMin });\r\n    } else {\r\n      infoDispatch({ type: \"start\", value: duration.allDayStart });\r\n      infoDispatch({ type: \"duration\", value: duration.durationDay });\r\n    }\r\n    infoDispatch({ type: \"allDay\", value: e.target.checked });\r\n  }\r\n\r\n  function setDateRange(dateRange) {\r\n    const durationDay = getDuration(dateRange, \"day\");\r\n    infoDispatch({ type: \"start\", value: dateRange[0] });\r\n    infoDispatch({ type: \"duration\", value: durationDay });\r\n    setDuration({ ...duration, allDayStart: dateRange[0], durationDay });\r\n  }\r\n\r\n  function setSingleDate(date) {\r\n    infoDispatch({ type: \"start\", value: date });\r\n    setDuration({ ...duration, datetimeStart: date });\r\n  }\r\n\r\n  function setTimeRange(timeRange) {\r\n    const durationMin = getDuration(timeRange, \"minute\");\r\n    infoDispatch({ type: \"duration\", value: durationMin });\r\n    const hour = timeRange[0].hour();\r\n    const min = timeRange[0].minute();\r\n    const datetimeStart = duration.datetimeStart.hour(hour).minute(min);\r\n    setDuration({ ...duration, datetimeStart, durationMin });\r\n    infoDispatch({ type: \"start\", value: datetimeStart });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setRepeatLabel(getRepeatValue(info.rrule));\r\n  }, [info.rrule]);\r\n\r\n  return {\r\n    info,\r\n    infoDispatch,\r\n    duration,\r\n    toggleAllDay,\r\n    setDateRange,\r\n    setSingleDate,\r\n    setTimeRange,\r\n    repeatLabel,\r\n  };\r\n}\r\n\r\nfunction infoReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"title\":\r\n      return { ...state, title: action.value };\r\n    case \"description\":\r\n      return { ...state, description: action.value };\r\n    case \"attendees\":\r\n      return { ...state, attendees: action.value };\r\n    case \"allDay\":\r\n      return { ...state, isAllDay: action.value };\r\n    case \"start\":\r\n      return { ...state, start: action.value };\r\n    case \"end\":\r\n      return { ...state, end: action.value };\r\n    case \"duration\":\r\n      return { ...state, duration: action.value };\r\n    case \"recurring\":\r\n      return { ...state, isRecurring: action.value };\r\n    case \"rrule\":\r\n      return { ...state, rrule: action.value };\r\n  }\r\n}\r\n\r\nfunction getEventInfo(datetime, event) {\r\n  if (event) {\r\n    event.start = dayjs(event.start);\r\n    return event;\r\n  }\r\n\r\n  const round = Math.ceil(datetime.minute() / 15);\r\n  eventTemplate.start = datetime.minute(round * 15);\r\n\r\n  return eventTemplate;\r\n}\r\n\r\nfunction getEventDuration(datetime, event) {\r\n  let template = getDurationTemplate(datetime);\r\n  if (event) {\r\n    if (event.isAllDay) {\r\n      template.allDayStart = dayjs(event.start);\r\n      template.durationDay = event.duration;\r\n    } else {\r\n      template.datetimeStart = dayjs(event.start);\r\n      template.durationMin = event.duration;\r\n    }\r\n    return template;\r\n  }\r\n\r\n  const round = Math.ceil(datetime.minute() / 15);\r\n  template.datetimeStart = datetime.minute(round * 15);\r\n  return template;\r\n}\r\n\r\nexport function getDuration(dates, type) {\r\n  return dates[1].diff(dates[0], type);\r\n}\r\n\r\nexport function getRepeatValue(rrule) {\r\n  if (rrule === \"\") {\r\n    return \"none\";\r\n  }\r\n  let text = rrulestr(rrule).toText();\r\n  text = text\r\n    .replace(\"every day \", \"Daily \")\r\n    .replace(\"every week \", \"Weekly \")\r\n    .replace(\"every month \", \"Monthly \")\r\n    .replace(\"every year \", \"Annually \")\r\n    .replace(\"every\", \"Every\");\r\n\r\n  let options = RRule.parseString(rrule);\r\n  if (options.bysetpos) {\r\n    text = text.replace(\"on \", `on the ${getPosition(options.bysetpos)} `);\r\n  }\r\n\r\n  if (text.length > 50) {\r\n    return text.substr(0, 50) + \"...\";\r\n  }\r\n\r\n  return text;\r\n}\r\n\r\nfunction getPosition(i) {\r\n  switch (i) {\r\n    case -1:\r\n      return \"Last\";\r\n    case 1:\r\n      return \"First\";\r\n    case 2:\r\n      return \"Second\";\r\n    case 3:\r\n      return \"Third\";\r\n    case 4:\r\n      return \"Fourth\";\r\n  }\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\schedule\\AllDayArea.js",["152"],"import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport AllDayEvent from \"./AllDayEvent\";\r\n\r\nconst Grid = styled.div`\r\n  background-image: linear-gradient(to right, lightgrey 0.5px, transparent 1px);\r\n  background-size: ${(props) =>\r\n    props.type === \"week\"\r\n      ? `${100 / 7}% auto`\r\n      : `${100 / props.calendars}% auto`};\r\n`;\r\n\r\nexport default function AllDayArea(props) {\r\n  const { events } = useAllDay(props.type, props.calendars, props.dates);\r\n\r\n  function displayAllDayEvents() {\r\n    if (props.type === \"day\") {\r\n      return DayEvents();\r\n    }\r\n    return WeekEvents();\r\n  }\r\n\r\n  function DayEvents() {\r\n    const position = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n      position.push(\r\n        <Col flex={1 / events.length}>\r\n          {events[i].map((event) => (\r\n            <AllDayEvent type=\"day\" event={event} dateRange={props.dates} />\r\n          ))}\r\n        </Col>\r\n      );\r\n    }\r\n    return <Row justify=\"space-around\">{position}</Row>;\r\n  }\r\n\r\n  function WeekEvents() {\r\n    events.sort((a, b) => a.datetime.diff(b.datetime));\r\n    return events.map((event) => (\r\n      <AllDayEvent type=\"week\" event={event} dateRange={props.dates} />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div style={{ overflowY: \"scroll\" }}>\r\n      <Grid type={props.type} calendars={props.calendars.length}>\r\n        {displayAllDayEvents()}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useAllDay(period, calendars, dates) {\r\n  const [events, setEvents] = useState(\r\n    getAllDayEvents(period, calendars, dates)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setEvents(getAllDayEvents(period, calendars, dates));\r\n  }, [calendars]);\r\n\r\n  return { events };\r\n}\r\n\r\nfunction getAllDayEvents(period, calendars, dates) {\r\n  let events = [];\r\n  for (let i = 0; i < calendars.length; i++) {\r\n    if (period === \"day\") {\r\n      let calendarEvents = getCalendarAllDayEvents(calendars[i], dates);\r\n      events.push(calendarEvents);\r\n    } else {\r\n      events = events.concat(getCalendarAllDayEvents(calendars[i], dates));\r\n    }\r\n  }\r\n\r\n  return events;\r\n}\r\n\r\nfunction getCalendarAllDayEvents(calendar, dates) {\r\n  // get events(id, dates[0], dates[-1]) get array of events, add color\r\n  return [\r\n    {\r\n      id: \"\",\r\n      canonicalEventId: \"\",\r\n      datetime: dayjs(\"2021-01-05 10:30\"),\r\n      attendees: [\r\n        { email: \"attd2\", status: 1 },\r\n        { email: \"attd3\", status: 1 },\r\n      ],\r\n      canonicalEvent: {\r\n        id: \"\",\r\n        userId: \"001\",\r\n        title: \"Run\",\r\n        description: \"go for a run\",\r\n        attendees: [1000],\r\n        start: \"2020-12-21 10:30\",\r\n        end: \"2021-1-09\",\r\n        duration: 2,\r\n        isAllDay: true,\r\n        isRecurring: false,\r\n        rrule: \"\",\r\n        exceptions: [],\r\n      },\r\n      style: { color: calendar.color },\r\n      userId: \"001\",\r\n    },\r\n  ];\r\n}\r\n","C:\\Programming\\Calendar\\client\\src\\schedule\\AllDayEvent.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthAllDayEvent.js",[],"C:\\Programming\\Calendar\\client\\src\\schedule\\month\\MonthDayEvent.js",[],"C:\\Programming\\Calendar\\client\\src\\contact\\Contact.js",[],"C:\\Programming\\Calendar\\client\\src\\contact\\AddContact.js",[],"C:\\Programming\\Calendar\\client\\src\\contact\\ContactRequest.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":24,"column":13,"nodeType":"159","endLine":37,"endColumn":4},{"ruleId":"157","severity":1,"message":"160","line":37,"column":6,"nodeType":"161","endLine":37,"endColumn":12,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"163","line":80,"column":6,"nodeType":"161","endLine":80,"endColumn":12,"suggestions":"164"},{"ruleId":"157","severity":1,"message":"158","line":132,"column":13,"nodeType":"159","endLine":156,"endColumn":4},{"ruleId":"157","severity":1,"message":"165","line":156,"column":6,"nodeType":"161","endLine":156,"endColumn":8,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"158","line":146,"column":13,"nodeType":"159","endLine":148,"endColumn":4},{"ruleId":"157","severity":1,"message":"167","line":148,"column":6,"nodeType":"161","endLine":148,"endColumn":8,"suggestions":"168"},{"ruleId":"157","severity":1,"message":"158","line":24,"column":13,"nodeType":"159","endLine":26,"endColumn":4},{"ruleId":"157","severity":1,"message":"169","line":26,"column":6,"nodeType":"161","endLine":26,"endColumn":23,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"171","line":102,"column":6,"nodeType":"161","endLine":102,"endColumn":17,"suggestions":"172"},{"ruleId":"157","severity":1,"message":"173","line":152,"column":6,"nodeType":"161","endLine":152,"endColumn":17,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":7,"column":3,"nodeType":"177","messageId":"178","endLine":24,"endColumn":4},{"ruleId":"179","severity":1,"message":"180","line":26,"column":60,"nodeType":"181","messageId":"182","endLine":26,"endColumn":62},{"ruleId":"175","severity":1,"message":"176","line":65,"column":5,"nodeType":"177","messageId":"178","endLine":75,"endColumn":6},{"ruleId":"175","severity":1,"message":"176","line":121,"column":3,"nodeType":"177","messageId":"178","endLine":148,"endColumn":4},{"ruleId":"175","severity":1,"message":"176","line":163,"column":3,"nodeType":"177","messageId":"178","endLine":189,"endColumn":4},{"ruleId":"175","severity":1,"message":"176","line":194,"column":3,"nodeType":"177","messageId":"178","endLine":215,"endColumn":4},{"ruleId":"175","severity":1,"message":"176","line":64,"column":3,"nodeType":"177","messageId":"178","endLine":83,"endColumn":4},{"ruleId":"175","severity":1,"message":"176","line":145,"column":3,"nodeType":"177","messageId":"178","endLine":156,"endColumn":4},{"ruleId":"157","severity":1,"message":"183","line":62,"column":6,"nodeType":"161","endLine":62,"endColumn":17,"suggestions":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["187"],"React Hook useEffect has a missing dependency: 'incrementTime'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has a missing dependency: 'getRequests'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has a missing dependency: 'props.date'. Either include it or remove the dependency array. If 'setEvents' needs the current value of 'props.date', you can also switch to useReducer instead of useState and read 'props.date' in the reducer.",["191"],"React Hook useEffect has missing dependencies: 'end' and 'start'. Either include them or remove the dependency array. If 'setAllDayEvents' needs the current value of 'start', you can also switch to useReducer instead of useState and read 'start' in the reducer.",["192"],"React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array. If 'setDayEvents' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.",["193"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dates' and 'period'. Either include them or remove the dependency array. If 'setEvents' needs the current value of 'period', you can also switch to useReducer instead of useState and read 'period' in the reducer.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [isAuthenticated, user, userId]",{"range":"211","text":"212"},"Update the dependencies array to be: [date, incrementTime]",{"range":"213","text":"214"},"Update the dependencies array to be: [userId]",{"range":"215","text":"216"},"Update the dependencies array to be: [getRequests]",{"range":"217","text":"218"},"Update the dependencies array to be: [props.calendars, props.date]",{"range":"219","text":"220"},"Update the dependencies array to be: [calendars, end, start]",{"range":"221","text":"222"},"Update the dependencies array to be: [calendars, date]",{"range":"223","text":"224"},"Update the dependencies array to be: [calendars, dates, period]",{"range":"225","text":"226"},[927,933],"[isAuthenticated, user, userId]",[1978,1984],"[date, incrementTime]",[3884,3886],"[userId]",[3556,3558],"[getRequests]",[704,721],"[props.calendars, props.date]",[2418,2429],"[calendars, end, start]",[3674,3685],"[calendars, date]",[1719,1730],"[calendars, dates, period]"]